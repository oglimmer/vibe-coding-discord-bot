replicaCount: 1

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

image:
  repository: ghcr.io/oglimmer/vibe-coding-discord-bot
  tag: latest
  pullPolicy: Always

imagePullSecrets:
  - name: oglimmerregistrykey

resources:
  requests:
    memory: "400Mi"
    cpu: "25m"
  limits:
    memory: "768Mi"
    cpu: "100m"

livenessProbe:
  exec:
    command:
      - sh
      - -c
      - |
        # 1) Fail if the bot process died
        if ! pgrep -f 'python.*main.py'; then
          echo "process missing" >&2
          echo "process missing" >/var/log/app.log
          exit 1
        fi

        # 2) Scan the last 100 lines for critical errors
        if tail -n100 /var/log/app.log | grep -qE 'Loop thread traceback|WARNING - Shard ID|database - ERROR - Error'; then
          echo "detected error pattern" >&2
          echo "detected error pattern" >/var/log/app.log
          exit 1
        fi

        exit 0
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  exec:
    command:
    - /bin/sh
    - -c
    - "test -f /tmp/bot_ready"
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

nodeSelector: {}

tolerations: []

affinity: {}

podAnnotations: {}

podSecurityContext:
  fsGroup: 1000

env:
  TZ: "Europe/Berlin"
  DB_HOST: "mariadb"
  DB_NAME: "vibe-bot"
  DB_USER: "vibe-bot"
  GAME_START_TIME: "13:37:00.000"
  SERGEANT_ROLE_ID: "1381201522238423122"
  COMMANDER_ROLE_ID: "1381201615155101857"
  GENERAL_ROLE_ID: "1381201618414080060"
  ANNOUNCEMENT_CHANNEL_ID: "1372659708045033616"
  KLUGSCHEISSER_ENABLED: "true"
  KLUGSCHEISSER_PROBABILITY: "10"
  KLUGSCHEISSER_MIN_LENGTH: "100"
  KLUGSCHEISSER_MAX_TOKENS: "200"
  KLUGSCHEISSER_MODEL: "gpt-4o-mini"
  KLUGSCHEISSER_COOLDOWN_SECONDS: "60"
  KLUGSCHEISSER_REQUIRE_OPTIN: "true"

  # Reaction-based Fact Checking
  FACTCHECK_REACTION_EMOJI: "üîç"
  FACTCHECK_DAILY_LIMIT_PER_USER: "5"

# Secrets configuration - using SealedSecrets
secrets:
  # These should remain empty in values.yaml - secrets come from SealedSecret
  discordToken: ""
  dbPassword: ""
  openaiApiKey: ""

# Secret reference configuration for SealedSecrets
secretRef:
  name: discord-bot-secrets  # Name matches the SealedSecret target
  enabled: true

# SealedSecret configuration
sealedSecrets:
  enabled: true  # Enable SealedSecret dependency
