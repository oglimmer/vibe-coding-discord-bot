services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: vibebot-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-meine_datenbank}
      POSTGRES_USER: ${DB_USER:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-geheim}
      TZ: ${TZ:-Europe/Berlin}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/database/migrations/postgresql_init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - vibebot-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-admin} -d ${DB_NAME:-meine_datenbank}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Discord Bot
  vibebot:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: vibebot-discord
    restart: unless-stopped
    environment:
      # Bot configuration
      BOT_TOKEN: ${BOT_TOKEN}
      TZ: ${TZ:-Europe/Berlin}
      
      # Database configuration (connecting to postgres service)
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-admin}
      DB_PASSWORD: ${DB_PASSWORD:-geheim}
      DB_NAME: ${DB_NAME:-meine_datenbank}
      
      # Python configuration
      PYTHONPATH: /app/src
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1
    volumes:
      - ./logs:/app/logs
      - bot_data:/app/data
    networks:
      - vibebot-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: vibebot-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@vibebot.local
      PGADMIN_DEFAULT_PASSWORD: ${DB_PASSWORD:-geheim}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - vibebot-network
    ports:
      - "8080:80"
    depends_on:
      - postgres
    profiles:
      - admin  # Only start with: docker compose --profile admin up

networks:
  vibebot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  bot_data:
    driver: local
